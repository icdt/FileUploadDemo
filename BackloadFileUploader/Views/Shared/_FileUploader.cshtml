<script type="text/javascript">
    (function () {
        'use strict';

        var isOnGitHub = false;
        //var url = '/Backload/UploadHandler';
        //var url = "/FileUpload/FileHandler?objectContext=aaa&uploadContext=bbb;ccc";
        var url = "/FileUpload/FileHandler" + "?" + "objectContext=" + "@ViewBag.UserId" + "&"+ "uploadContext=" + "@ViewBag.AlbumId";

        angular.module('demo', [
            'blueimp.fileupload'
        ])
            .config([
                '$httpProvider', 'fileUploadProvider',
                function ($httpProvider, fileUploadProvider) {
                    if (isOnGitHub) {
                        // Demo settings:
                        delete $httpProvider.defaults.headers.common['X-Requested-With'];
                        angular.extend(fileUploadProvider.defaults, {
                            // Enable image resizing, except for Android and Opera,
                            // which actually support image resizing, but fail to
                            // send Blob objects via XHR requests:
                            disableImageResize: /Android(?!.*Chrome)|Opera/
                                .test(window.navigator && navigator.userAgent),
                            maxFileSize: 5000000,
                            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i
                        });
                    }
                }
            ])

            .controller('DemoFileUploadController', [
                '$scope', '$http',
                function ($scope, $http) {
                    if (!isOnGitHub) {
                        $scope.loadingFiles = true;
                        $scope.options = {
                            url: url
                        };
                        $http.get(url)
                            .then(
                                function (response) {
                                    $scope.loadingFiles = false;
                                    $scope.queue = response.data.files || [];
                                },
                                function () {
                                    $scope.loadingFiles = false;
                                }
                            );
                    }
                }
            ])

            .controller('FileDestroyController', [
                '$scope', '$http',
                function ($scope, $http) {
                    var file = $scope.file,
                        state;
                    if (file.url) {
                        file.$state = function () {
                            return state;
                        };
                        file.$destroy = function () {
                            state = 'pending';
                            return $http({
                                url: file.delete_url,
                                method: file.delete_type
                            }).then(
                                function () {
                                    state = 'resolved';
                                    $scope.clear(file);
                                },
                                function () {
                                    state = 'rejected';
                                }
                            );
                        };
                    } else if (!file.$cancel) {
                        file.$cancel = function () {
                            $scope.clear(file);
                        };
                    }
                }
            ]);

    }());


</script>



<!-- The file upload form used as target for the file upload widget -->
<form id="fileupload" action="/FileUpload/FileHandler" method="POST" enctype="multipart/form-data" data-ng-app="demo" data-ng-controller="DemoFileUploadController" data-file-upload="options" data-ng-class="{true: 'fileupload-processing'}[!!processing() || loadingFiles]">
    <!-- Redirect browsers with JavaScript disabled to the origin page -->
    <noscript><input type="hidden" name="redirect" value="/"></noscript>
    @*<input type="hidden" name="objectContext" value="@ViewBag.UserId" />
    <input type="hidden" name="uploadContext" value="@ViewBag.AlbumId" />*@
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
        <div class="span7">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="icon-plus icon-white"></i>
                <span>Add files...</span>
                <input type="file" name="files[]" multiple>
            </span>
            <button type="button" class="btn btn-primary start" data-ng-click="submit()">
                <i class="icon-upload icon-white"></i>
                <span>Start upload</span>
            </button>
            <button type="button" class="btn btn-warning cancel" data-ng-click="cancel()">
                <i class="icon-ban-circle icon-white"></i>
                <span>Cancel upload</span>
            </button>
            <!-- The loading indicator is shown during file processing -->
            <div class="fileupload-loading"></div>
        </div>
        <!-- The global progress information -->
        <div class="span5 fade" data-ng-class="{true: 'in'}[!!active()]">
            <!-- The global progress bar -->
            <div class="progress progress-success progress-striped" data-file-upload-progress="progress()"><div class="bar" data-ng-style="{width: num + '%'}"></div></div>
            @*<div class="progress progress-success progress-striped active" data-file-upload-progress="progress()"><div class="bar" data-ng-style="{width: num + '%'}"></div></div>*@
            <!-- The extended global progress information -->
            <div class="progress-extended">&nbsp;</div>
        </div>
    </div>
    <!-- The table listing the files available for upload/download -->
    <table class="table table-striped files ng-cloak" data-toggle="modal-gallery" data-target="#modal-gallery">
        <tr data-ng-repeat="file in queue">
            <td data-ng-switch data-on="!!file.thumbnail_url">
                <div class="preview" data-ng-switch-when="true">
                    <a data-ng-href="{{file.url}}" title="{{file.name}}" data-gallery="gallery" download="{{file.name}}"><img data-ng-src="{{file.thumbnail_url}}" alt=""></a>
                </div>
                <div class="preview" data-ng-switch-default data-file-upload-preview="file"></div>
            </td>
            <td>
                <p class="name" data-ng-switch data-on="!!file.url">
                    <a data-ng-switch-when="true" data-ng-href="{{file.url}}" title="{{file.name}}" data-gallery="gallery" download="{{file.name}}">{{file.name}}</a>
                    <span data-ng-switch-default>{{file.name}}</span>
                </p>
                <div data-ng-show="file.error"><span class="label label-important">Error</span> {{file.error}}</div>
            </td>
            <td>
                <p class="size">{{file.size | formatFileSize}}</p>
                <div class="progress progress-success progress-striped fade" data-ng-class="{pending: 'in'}[file.$state()]" data-file-upload-progress="file.$progress()"><div class="bar" data-ng-style="{width: num + '%'}"></div></div>
                @*<div class="progress progress-success progress-striped active fade" data-ng-class="{pending: 'in'}[file.$state()]" data-file-upload-progress="file.$progress()"><div class="bar" data-ng-style="{width: num + '%'}"></div></div>*@
            </td>
            <td>
                <button type="button" class="btn btn-primary start" data-ng-click="file.$submit()" data-ng-hide="!file.$submit">
                    <i class="icon-upload icon-white"></i>
                    <span>Start</span>
                </button>
                <button type="button" class="btn btn-warning cancel" data-ng-click="file.$cancel()" data-ng-hide="!file.$cancel">
                    <i class="icon-ban-circle icon-white"></i>
                    <span>Cancel</span>
                </button>
                <button data-ng-controller="FileDestroyController" type="button" class="btn btn-danger destroy" data-ng-click="file.$destroy()" data-ng-hide="!file.$destroy">
                    <i class="icon-ban-circle icon-white"></i>
                    <span>Delete</span>
                </button>
            </td>
        </tr>
    </table>
</form><br>
